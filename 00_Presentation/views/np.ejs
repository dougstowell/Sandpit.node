<div class="reveal">

    <!-- Used to fade in a background when a specific slide state is reached -->
    <div class="state-background"></div>

    <!-- Any section element inside of this container is displayed as a slide -->
    <div class="slides">

        <section data-state="bluesmith">
            <h1>node.js</h1>
            <h3 class="inverted">A Primer</h3>
            <script>
                // Delicously hacky. Look away.
                if( navigator.userAgent.match( /(iPhone|iPad|iPod|Android)/i ) ) document.write( '<p style="color: rgba(0,0,0,0.3); text-shadow: none;">('+'Tap to navigate'+')</p>' );
            </script>

            <p>
                JavaScript is the only language that I’m aware of that people feel they don’t need to learn before they start using it.
            </p>
            <p>
                <i><small>- <a href="http://javascript.crockford.com/">Douglas Crockford</a> </small></i>
            </p>

            <aside class="notes">
                Welcome to Lunch n Learn in 2015.
                Slightly glib, but valid. With advance of frameworks like jQuery we have become cushioned somewhat.
            </aside>
        </section>

        <section data-state="bluesmith">
            <h2>Agenda</h2>
            <ul>
                <li>History Lesson</li>
                <li>node</li>
                <li>npm</li>
                <li>node and Microsoft</li>
                <li>Demos</li>
                <li>Questions</li>
            </ul>
        </section>

        <section data-state="bluesmith">
            <section>
                <h2>History Lesson</h2>
                <p>
                    <img src="/images/undefined-is-not-a-function.png" />
                </p>
                <p>
                    <a href="http://githut.info/">git hut</a>
                </p>
                
                <aside class="notes">
                    Very telling results from Google Trends on a very popular javascript error.
                    Nice github visualisation showing javascripts popularity.
                </aside>
            </section>
            <section>
                <h2>History Lesson</h2>
                <h3>Blur vs Oasis</h3>
                <ul>
                    <li class="fragment">Mocha - LiveWire - LiveScript - JavaScript</li>
                    <li class="fragment">Written by <a href="https://twitter.com/brendaneich">@BrendanEich</a> in 10 days!</li>
                    <li class="fragment">Passed to ECMA for standardisation (ECMAScript)</li>
                    <li class="fragment">Ubiquitous / Server side (Ajax / jQuery)</li>
                    <li class="fragment">node / npm</li>
                    <li class="fragment">All browsers running the same JavaScript?</li>
                </ul>

                <aside class="notes"> 
                    Lot of good (functions, loose typing, dynamic objects)
                    Lot of bad (typeof NaN === 'number' // true, 0 == '')
                    Netscape Navigator 2.0 vs IE 3.0 (JScript)
                    European Computer Manufacturers Association (ECMA), other implementations like ActionScript
                    "Unwanted trade name that sounds like a skin disease" - Brendan Eich
                    ECMA 6 this year, ECMA 7 next year
                </aside>
            </section>
        </section>

        <!-- node slides section -->
        <section data-state="bluesmith">
            <section>
                <h2>
                    <a href="http://nodejs.org/">
                        <img src="/images/node-logo.png" />
                    </a>
                </h2>
                <ul>
                    <li>Uses Google's V8 JavaScript engine</li>
                    <li>Event driven, non blocking</li>
                    <li>Created by Ryan Dahl (@Joyent) for Linux in 2009</li>
                    <li>Microsoft got in on the act in 2011</li>
                    <li>Single threaded</li>
                </ul>
                <aside class="notes">
                    0.12.0 at time of writing
                    Node.js operates on a single thread, using non-blocking I/O calls, allowing it to support tens of thousands of concurrent connections,
                    without worrying about the cost of context-switching between threads. The design of sharing a single-thread between all the requests
                    means it can be used to build highly concurrent applications. The design goal of a Node.js application is that any function performing I/O must use a callback.

                    A downside of this approach is that Node.js doesn't allow scaling with the number of CPU cores of the machine it is running on.
                </aside>
            </section>

            <section>
                <h2><img src="/images/node-logo.png" /></h2>
                <h3>Event driven, non blocking (Argos)</h3>
                <pre><code contenteditable>
var result = database.query("SELECT * FROM hugetable");
console.log("Hello World");
                </code></pre>
                <pre><code contenteditable>
database.query("SELECT * FROM hugetable", function(rows) {
  var result = rows;
});
console.log("Hello World");
                </code></pre>
            </section>

            <section>
                <h2><img src="/images/node-logo.png" /></h2>
                <ul>
                    <li>Walmart</li>
                    <li>Linked In</li>
                    <li>eBay</li>
                    <li>Dow Jones</li>
                    <li>Yahoo!</li>
                    <li>PayPal</li>
                    <li>Github (Atom)</li>
                    <li>OW Labs...</li>
                </ul>
            </section>

            <section>
                <h2>
                    <a href="https://iojs.org/">
                        <img src="/images/io-logo.png" />
                    </a>                    
                </h2>
                <ul>
                    <li>Fork of node</li>
                    <li>Tired of Joyent's corporate control</li>
                </ul>
                <aside class="notes">
                    Lack of open governance, no releases for a while - keeping on top of V8 releases.
                </aside>
            </section>
        </section>

        <!-- npm slides section -->
        <section data-state="bluesmith">
            <section>
                <h2>
                    <a href="https://npmjs.com/">
                        <img src="/images/npm-logo.svg" />
                    </a>
                </h2>
                <ul>
                    <li>Bundled with node</li>
                    <li>Command line driven</li>
                    <li>100K+ packages, 40M package downloads a day</li>
                    <li>Upload your own packages</li>
                    <li>Global and local</li>
                    <li>Semver (MAJOR.MINOR.PATCH)</li>
                </ul>
            </section>
            <section>
                <h2><img src="/images/npm-logo.svg" /></h2>
                <pre><code contenteditable>
npm init
npm install express --save
npm install sax@0.1.1
                </code></pre>

                <pre><code contenteditable>
npm install

{
    "name": "application-name",
    "version": "0.0.1",
    "private": true,
    "dependencies": {
        "express": "2.5.8",
        "ejs": ">= 0.0.1",
        "socket.io" : ">= 0.9.6"
    }
}
                </code></pre>
            </section>
        </section>

        <!-- node and Microsoft slides section -->
        <section data-state="bluesmith">
            <h2>node and Microsoft (NTVS)</h2>
            <ul>
                <li>Project Dialog</li>
                <li>npm without command line</li>
                <li>Intellisense</li>
                <li>Debugging</li>
                <li>Code Profiling</li>
                <li>More powerful node REPL</li>
                <li>Azure</li>
            </ul>

            <iframe width="560" height="315" src="https://www.youtube.com/embed/W_1_UqUDx2s" frameborder="0" allowfullscreen=""></iframe>
        </section>
        
        <section>
            <h1>Demos</h1>
            <video autoplay loop><source src="/images/dancing-pint.mp4" type="video/mp4"></video>
        </section>

        <section data-state="bluesmith">
            <h1>The End</h1>
            <h3 class="inverted">Questions?</h3>
        </section>
    </div>

    <!-- The navigational controls UI -->
    <aside class="controls">
        <a class="left" href="#">&#x25C4;</a>
        <a class="right" href="#">&#x25BA;</a>
        <a class="up" href="#">&#x25B2;</a>
        <a class="down" href="#">&#x25BC;</a>
    </aside>

    <!-- Displays presentation progress, max value changes via JS to reflect # of slides -->
    <div class="progress"><span></span></div>

</div>
